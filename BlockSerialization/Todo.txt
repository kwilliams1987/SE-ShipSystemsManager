IMyConveyorSorter *

IMyMotorStator
IMyOreDetector
IMyOxygenGenerator
IMyOxygenTank
IMyPistonBase
IMyProgrammableBlock
IMyProjector
IMyRadioAntenna
IMyReactor
IMyRefinery
IMyRemoteControl
IMySensorBlock
IMyShipConnector
IMyShipController
IMyShipDrill
IMyShipGrinder
IMyShipWelder
IMySmallGatlingGun
IMySmallMissileLauncher
IMySmallMissileLauncherReload
IMyTextPanel
IMyThrust
IMyWarhead



        /*
         TODO: Move these Custom properties to the BlockSerialization project.
        return;

        foreach (var config in configValues)
        {
            switch (config.Key)
            {
                case "Countdown":
                    if (warhead != default(IMyWarhead))
                    {
                        if (Object.Equals(config.Value, true))
                        {
                            warhead.StartCountdown();
                        }
                        else
                        {
                            warhead.StopCountdown();
                        }
                    }
                    break;
                case nameof(Serialization.CustomProperties.PublicText):
                    if (textPanel != default(IMyTextPanel))
                    {
                        textPanel.WritePublicText(config.Value.ToString());
                    }
                    break;
                case "PublicTitle":
                    if (textPanel != default(IMyTextPanel))
                    {
                        textPanel.WritePublicTitle(config.Value.ToString());
                    }
                    break;
                case nameof(Serialization.CustomProperties.Images):
                    if (textPanel != default(IMyTextPanel))
                    {
                        textPanel.ClearImagesFromSelection();
                        textPanel.AddImagesToSelection(config.Value.ToString().Split(';').ToList());
                        textPanel.ShowTextureOnScreen();
                    }
                    break;
                case "Play":
                    if (soundBlock != default(IMySoundBlock))
                    {
                        if (Object.Equals(config.Value, true))
                        {
                            soundBlock.Play();
                        }
                        else
                        {
                            soundBlock.Stop();
                        }
                    }
                    break;
            }
        }
        */